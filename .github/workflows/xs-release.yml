# Build extra small Deno release

name: xs-release

on:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-10.15
    env:
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: full
      RUSTC_FORCE_INCREMENTAL: 1
    steps:
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: denoland/deno
          releases-only: true
        id: deno
      - run: echo "Deno is at version ${{ steps.deno.outputs.tag }}"
      - uses: actions/checkout@v2
        with:
          repository: denoland/deno
          ref: ${{ steps.deno.outputs.tag }}
      - uses: actions/checkout@v2
        with:
          path: "deno-xs"
      - run: ls extensions -la
      - run: cp deno-xs/Cargo.toml Cargo.toml
      - run: cat Cargo.toml
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --all-targets
      - name: Pre-release (linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          cd target/release
          zip -r deno-x86_64-unknown-linux-gnu.zip deno
          ./deno types > lib.deno.d.ts
      - name: Pre-release (mac)
        if: startsWith(matrix.os, 'macos')
        run: |
          cd target/release
          zip -r deno-x86_64-apple-darwin.zip deno
      - name: Upload linux build
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: target/release/deno-x86_64-unknown-linux-gnu.zip
      - name: Upload macOS build
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: target/release/deno-x86_64-apple-darwin.zip
      - name: Download build
        uses: actions/download-artifact@v2
      - name: Release ${{ steps.deno.outputs.tag }}
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.deno.outputs.tag }}"
          name: "${{ steps.deno.outputs.tag }}"
          prerelease: ${{ steps.deno.outputs.tag == 'latest' }}
          allowUpdates: true
          replacesArtifacts: true
          artifacts: "release/*"
          body: "Unofficial Deno ${{ steps.deno.outputs.tag }} release, optimized for size"
          token: ${{ secrets.GITHUB_TOKEN }}
